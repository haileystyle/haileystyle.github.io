{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["IG","INFO","title","en","kr","location","about1","about2","about3","about4","contact","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lang","flipped","hideoverlay","flipcard","bind","assertThisInitialized","ismobile","navigator","userAgent","match","console","log","document","addEventListener","evt","firstTouch","touches","originalEvent","getTouches","xDown","clientX","yDown","clientY","xUp","yUp","xDiff","yDiff","Math","abs","setState","_this2","LOCALE","FLIP_CLASS","HIDDEN","react_default","a","createElement","className","onClick","concat","src","alt","href","width","height","frameBorder","style","border","allowFullScreen","Component","Boolean","window","hostname","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbf32f75.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nconst IG = \"hailey_colour\";\n\nconst INFO = {\n  title: {\n    en: \"Hair Designer, Chemical Specialist\",\n    kr: \"헤어 디자이너, 케미컬 스페셜리스트\",\n  },\n  location: {\n    en: \"Melbourne, Australia\",\n    kr: \"호주, 멜번\",\n  },\n  about1: {\n    en: \"From Korea; Born and raised in Korea, working in Australia\",\n    kr: \"한국에서 왔어요; 한국에서 자랐습니다, 현재 호주에서 일하고 있어요\",\n  },\n  about2: {\n    en: \"Bilingual; As you may have guessed, Korean and English\",\n    kr: \"2개국어; 영어와 한국어를 해요\",\n  },\n  about3: {\n    en: \"Chemical Specialist; I'd love to dye, straighten or perm your hair!\",\n    kr: \"케미컬 스페셜리스트; 염색, 매직, 펌을 맡겨주세요!\"\n  },\n  about4: {\n    en: \"Puzzle Game Enthusiast; Especially love number-based ones\",\n    kr: \"퍼즐게임 좋아해요; 숫자관련 퍼즐을 제일 좋아합니다 :)\"\n  },\n  contact: {\n    en: \"View my work and message me on Instagram\",\n    kr: \"인스타그램에서 제 작품들 보시고, 메세지 주세요\"\n  },\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: \"en\",\n      flipped: false\n    }\n\n    this.hideoverlay = false;\n    this.flipcard = this.flipcard.bind(this);\n\n    this.ismobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i) != null;\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\", this.ismobile)\n    if (this.ismobile) {\n      console.log(\"mobile swipe mount\");\n      document.addEventListener('touchstart', handleTouchStart, false);\n      document.addEventListener('touchmove', handleTouchMove, false);\n\n      var xDown = null;\n      var yDown = null;\n      var flipcard = this.flipcard;\n\n      function getTouches(evt) {\n        return evt.touches ||             // browser API\n          evt.originalEvent.touches; // jQuery\n      }\n\n      function handleTouchStart(evt) {\n        const firstTouch = getTouches(evt)[0];\n        xDown = firstTouch.clientX;\n        yDown = firstTouch.clientY;\n      };\n\n      function handleTouchMove(evt) {\n        if (!xDown || !yDown) {\n          return;\n        }\n\n        var xUp = evt.touches[0].clientX;\n        var yUp = evt.touches[0].clientY;\n\n        var xDiff = xDown - xUp;\n        var yDiff = yDown - yUp;\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) {/*most significant*/\n          flipcard();\n        }\n        /* reset values */\n        xDown = null;\n        yDown = null;\n      };\n    }\n  }\n\n  flipcard() {\n    this.setState({ flipped: !this.state.flipped })\n    this.hideoverlay = true;\n  }\n\n  render() {\n    const NAME = \"HAILEY\";\n    const LOCALE = this.state.lang\n\n    const FLIP_CLASS = this.state.flipped ? \"landing-flipped\" : \"\";\n    const HIDDEN = this.hideoverlay ? \"hidden\" : \"\";\n\n    return (\n      <div className=\"App\">\n        <p className=\"toggle-lang\"\n          onClick={() => this.setState({ lang: this.state.lang != \"en\" ? \"en\" : \"kr\" })}>\n          {this.state.lang == \"en\" ? \"EN|kr\" : \"en|KR\"}\n        </p>\n\n        <div className={`landing ${FLIP_CLASS}`}\n          onClick={() => {\n            if (!this.ismobile) {\n              this.flipcard();\n            }\n          }}>\n\n          <div className={\"overlay-desktop \" + HIDDEN}>\n            <div>\n              <p>{LOCALE == \"en\" ? \"Click the card\" : \"카드를\"}</p>\n              <p>{LOCALE == \"en\" ? \"to flip it\" : \"클릭 해주세요\"}</p>\n            </div>\n            <img src=\"/arrow.svg\" alt=\"\" />\n          </div>\n\n          <div className={\"overlay-mobile \" + HIDDEN}>\n            <div>\n              <p>{LOCALE == \"en\" ? \"Swipe to\" : \"카드를\"}</p>\n              <p>{LOCALE == \"en\" ? \"flip the card\" : \"밀어주세요\"}</p>\n            </div>\n            <img src=\"/arrow.svg\" alt=\"\" />\n          </div>\n\n          <div className=\"simple\">\n            <div className=\"front\">\n              <h1>{NAME}</h1>\n              <h2>{INFO.title[LOCALE]}</h2>\n              <h3 className=\"faint\">{INFO.location[LOCALE]}</h3>\n              <div className=\"social\">\n                <a href={`https://www.instagram.com/${IG}`}>\n                  <img src=\"/igicon.png\" alt=\"\" />\n                  <h3> @{IG}</h3>\n                </a>\n              </div>\n            </div>\n\n          </div>\n\n          <div className=\"simple-back\">\n            <div className=\"box\">\n              <h2>About</h2>\n              <p>{INFO.about1[LOCALE]}</p>\n              <p>{INFO.about2[LOCALE]}</p>\n              <p>{INFO.about3[LOCALE]}</p>\n              <p>{INFO.about4[LOCALE]}</p>\n\n              <div className=\"break\"></div>\n\n              <h2>Contact</h2>\n              <p>{INFO.contact[LOCALE]}</p>\n              <div className=\"social\">\n                <a href={`https://www.instagram.com/${IG}`}>\n                  <img src=\"/igicon.png\" alt=\"\" />\n                  <h3> @{IG}</h3>\n                </a>\n              </div>\n\n            </div>\n\n            <div className=\"box\">\n              <h2>Find Me Here</h2>\n              <iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d4437.457769514548!2d144.96074254616207!3d-37.80718404199481!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6ad65d34a69fced3%3A0xc19114de723733f4!2sD2M+Hair+%26+Beauty+Salon!5e0!3m2!1sen!2sau!4v1547449696510\"\n                width=\"100%\"\n                height=\"90%\"\n                frameBorder=\"0\" style={{ border: 0 }} allowFullScreen></iframe>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}